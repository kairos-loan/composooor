/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  BuyNowPayLater,
  BuyNowPayLaterInterface,
} from "../BuyNowPayLater";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract FakeKairos",
        name: "_kairos",
        type: "address",
      },
      {
        internalType: "contract FlashLender",
        name: "_flashLender",
        type: "address",
      },
      {
        internalType: "contract MarketPlace",
        name: "_market",
        type: "address",
      },
      {
        internalType: "contract IERC721",
        name: "_nft",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_wEth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registryAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "abiArgs",
        type: "bytes",
      },
    ],
    name: "MissingOffchainDataError",
    type: "error",
  },
  {
    inputs: [],
    name: "buyNowPayLater",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "callbackData",
        type: "bytes",
      },
    ],
    name: "flashCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "recordParameter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610ca6380380610ca683398101604081905261002f916100ac565b6001600160a01b039283166080819052600180546001600160a01b031990811697861697909717905560028054871695851695909517909455600380548616909417909355600480548516918316919091179055600580549093169116179055610121565b6001600160a01b03811681146100a957600080fd5b50565b600080600080600060a086880312156100c457600080fd5b85516100cf81610094565b60208701519095506100e081610094565b60408701519094506100f181610094565b606087015190935061010281610094565b608087015190925061011381610094565b809150509295509295909350565b608051610b6a61013c60003960006104790152610b6a6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631e56d58314610046578063c1012f8114610050578063e373923814610063575b600080fd5b61004e610076565b005b61004e61005e366004610633565b610112565b61004e61007136600461073d565b610124565b600254600454604080513360208201526001600160a01b0392831681830152600160608083019190915282518083039091018152608082019283905263167ec36d60e01b909252919092169163167ec36d916100de91670de0b6b3a76400009160840161080d565b600060405180830381600087803b1580156100f857600080fd5b505af115801561010c573d6000803e3d6000fd5b50505050565b600061011f8284836108ae565b505050565b60008060008380602001905181019061013d9190610984565b60055460035460405163095ea7b360e01b81526001600160a01b039182166004820152670de0b6b3a76400006024820152949750929550909350169063095ea7b3906044016020604051808303816000875af11580156101a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c591906109c7565b5060006101d283836103cd565b600480546001805460405163095ea7b360e01b81526001600160a01b03918216948101949094526024840191909152929350919091169063095ea7b390604401600060405180830381600087803b15801561022c57600080fd5b505af1158015610240573d6000803e3d6000fd5b50506001546040516308ba54eb60e21b81526001600160a01b038781166004830152602482018790526709b6e64a8ec600006044830152858116606483015290911692506322e953ac9150608401600060405180830381600087803b1580156102a857600080fd5b505af11580156102bc573d6000803e3d6000fd5b50506005546040516323b872dd60e01b81526001600160a01b038881166004830152306024830152670429d069189e0000604483015290911692506323b872dd91506064016020604051808303816000875af1158015610320573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034491906109c7565b5060055460025460405163095ea7b360e01b81526001600160a01b039182166004820152670de0b6b3a7640000602482015291169063095ea7b3906044016020604051808303816000875af11580156103a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c591906109c7565b505050505050565b6000806104446040518060400160405280601d81526020017f687474703a2f2f6c6f63616c686f73743a383038302f6170692f62757900000081525085856040516020016104309291906001600160a01b03929092168252602082015260400190565b6040516020818303038152906040526104fd565b90506000808280602001905181019061045d91906109f0565b604051630bacc3c960e41b815291935091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063bacc3c90906104b09085908590600401610aab565b6020604051808303816000875af11580156104cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f39190610ae1565b9695505050505050565b60606000805461050c9061082e565b905060000361053d5730838360405163ab3e92cf60e01b815260040161053493929190610afe565b60405180910390fd5b6000805461054a9061082e565b80601f01602080910402602001604051908101604052809291908181526020018280546105769061082e565b80156105c35780601f10610598576101008083540402835291602001916105c3565b820191906000526020600020905b8154815290600101906020018083116105a657829003601f168201915b505050505090506000806105d791906105dd565b92915050565b5080546105e99061082e565b6000825580601f106105f9575050565b601f016020900490600052602060002090810190610617919061061a565b50565b5b8082111561062f576000815560010161061b565b5090565b6000806020838503121561064657600080fd5b823567ffffffffffffffff8082111561065e57600080fd5b818501915085601f83011261067257600080fd5b81358181111561068157600080fd5b86602082850101111561069357600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156106de576106de6106a5565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561070d5761070d6106a5565b604052919050565b600067ffffffffffffffff82111561072f5761072f6106a5565b50601f01601f191660200190565b60006020828403121561074f57600080fd5b813567ffffffffffffffff81111561076657600080fd5b8201601f8101841361077757600080fd5b803561078a61078582610715565b6106e4565b81815285602083850101111561079f57600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b838110156107d85781810151838201526020016107c0565b50506000910152565b600081518084526107f98160208601602086016107bd565b601f01601f19169290920160200192915050565b82815260406020820152600061082660408301846107e1565b949350505050565b600181811c9082168061084257607f821691505b60208210810361086257634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561011f57600081815260208120601f850160051c8101602086101561088f5750805b601f850160051c820191505b818110156103c55782815560010161089b565b67ffffffffffffffff8311156108c6576108c66106a5565b6108da836108d4835461082e565b83610868565b6000601f84116001811461090e57600085156108f65750838201355b600019600387901b1c1916600186901b178355610968565b600083815260209020601f19861690835b8281101561093f578685013582556020948501946001909201910161091f565b508682101561095c5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b6001600160a01b038116811461061757600080fd5b60008060006060848603121561099957600080fd5b83516109a48161096f565b60208501519093506109b58161096f565b80925050604084015190509250925092565b6000602082840312156109d957600080fd5b815180151581146109e957600080fd5b9392505050565b6000808284036080811215610a0457600080fd5b6060811215610a1257600080fd5b50610a1b6106bb565b8351610a268161096f565b81526020848101519082015260408085015190820152606084015190925067ffffffffffffffff811115610a5957600080fd5b8301601f81018513610a6a57600080fd5b8051610a7861078582610715565b818152866020838501011115610a8d57600080fd5b610a9e8260208301602086016107bd565b8093505050509250929050565b60018060a01b038351168152602083015160208201526040830151604082015260806060820152600061082660808301846107e1565b600060208284031215610af357600080fd5b81516109e98161096f565b6001600160a01b0384168152606060208201819052600090610b22908301856107e1565b82810360408401526104f381856107e156fea26469706673582212204a3c39fa9cb6b3e3c322bc2c6167966666b00af36553201da99096291be4e51d64736f6c63430008120033";

type BuyNowPayLaterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BuyNowPayLaterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BuyNowPayLater__factory extends ContractFactory {
  constructor(...args: BuyNowPayLaterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _kairos: PromiseOrValue<string>,
    _flashLender: PromiseOrValue<string>,
    _market: PromiseOrValue<string>,
    _nft: PromiseOrValue<string>,
    _wEth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BuyNowPayLater> {
    return super.deploy(
      _kairos,
      _flashLender,
      _market,
      _nft,
      _wEth,
      overrides || {}
    ) as Promise<BuyNowPayLater>;
  }
  override getDeployTransaction(
    _kairos: PromiseOrValue<string>,
    _flashLender: PromiseOrValue<string>,
    _market: PromiseOrValue<string>,
    _nft: PromiseOrValue<string>,
    _wEth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _kairos,
      _flashLender,
      _market,
      _nft,
      _wEth,
      overrides || {}
    );
  }
  override attach(address: string): BuyNowPayLater {
    return super.attach(address) as BuyNowPayLater;
  }
  override connect(signer: Signer): BuyNowPayLater__factory {
    return super.connect(signer) as BuyNowPayLater__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BuyNowPayLaterInterface {
    return new utils.Interface(_abi) as BuyNowPayLaterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BuyNowPayLater {
    return new Contract(address, _abi, signerOrProvider) as BuyNowPayLater;
  }
}
