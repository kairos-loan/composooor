/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  BuyNowPayLater,
  BuyNowPayLaterInterface,
} from "../BuyNowPayLater";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract FakeKairos",
        name: "_kairos",
        type: "address",
      },
      {
        internalType: "contract FlashLender",
        name: "_flashLender",
        type: "address",
      },
      {
        internalType: "contract MarketPlace",
        name: "_market",
        type: "address",
      },
      {
        internalType: "contract IERC721",
        name: "_nft",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_wEth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registryAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "abiArgs",
        type: "bytes",
      },
    ],
    name: "MissingOffchainDataError",
    type: "error",
  },
  {
    inputs: [],
    name: "buyNowPayLater",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "callbackData",
        type: "bytes",
      },
    ],
    name: "flashCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "recordParameter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610c46380380610c4683398101604081905261002f916100ac565b6001600160a01b039283166080819052600180546001600160a01b031990811697861697909717905560028054871695851695909517909455600380548616909417909355600480548516918316919091179055600580549093169116179055610121565b6001600160a01b03811681146100a957600080fd5b50565b600080600080600060a086880312156100c457600080fd5b85516100cf81610094565b60208701519095506100e081610094565b60408701519094506100f181610094565b606087015190935061010281610094565b608087015190925061011381610094565b809150509295509295909350565b608051610b0a61013c60003960006104790152610b0a6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631e56d58314610046578063c1012f8114610050578063e373923814610063575b600080fd5b61004e610076565b005b61004e61005e3660046105d0565b610112565b61004e6100713660046106da565b610124565b600254600454604080513360208201526001600160a01b0392831681830152600160608083019190915282518083039091018152608082019283905263167ec36d60e01b909252919092169163167ec36d916100de91670de0b6b3a7640000916084016107aa565b600060405180830381600087803b1580156100f857600080fd5b505af115801561010c573d6000803e3d6000fd5b50505050565b600061011f82848361084b565b505050565b60008060008380602001905181019061013d9190610924565b60055460035460405163095ea7b360e01b81526001600160a01b039182166004820152670de0b6b3a76400006024820152949750929550909350169063095ea7b3906044016020604051808303816000875af11580156101a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c59190610967565b5060006101d283836103cd565b600480546001805460405163095ea7b360e01b81526001600160a01b03918216948101949094526024840191909152929350919091169063095ea7b390604401600060405180830381600087803b15801561022c57600080fd5b505af1158015610240573d6000803e3d6000fd5b50506001546040516308ba54eb60e21b81526001600160a01b038781166004830152602482018790526709b6e64a8ec600006044830152858116606483015290911692506322e953ac9150608401600060405180830381600087803b1580156102a857600080fd5b505af11580156102bc573d6000803e3d6000fd5b50506005546040516323b872dd60e01b81526001600160a01b038881166004830152306024830152670429d069189e0000604483015290911692506323b872dd91506064016020604051808303816000875af1158015610320573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103449190610967565b5060055460025460405163095ea7b360e01b81526001600160a01b039182166004820152670de0b6b3a7640000602482015291169063095ea7b3906044016020604051808303816000875af11580156103a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c59190610967565b505050505050565b6000806104446040518060400160405280601d81526020017f687474703a2f2f6c6f63616c686f73743a383038302f6170692f62757900000081525085856040516020016104309291906001600160a01b03929092168252602082015260400190565b6040516020818303038152906040526104fd565b90506000808280602001905181019061045d9190610990565b604051630bacc3c960e41b815291935091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063bacc3c90906104b09085908590600401610a4b565b6020604051808303816000875af11580156104cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f39190610a81565b9695505050505050565b60606000805461050c906107cb565b905060000361053d5730838360405163ab3e92cf60e01b815260040161053493929190610a9e565b60405180910390fd5b6000805461054a906107cb565b80601f0160208091040260200160405190810160405280929190818152602001828054610576906107cb565b80156105c35780601f10610598576101008083540402835291602001916105c3565b820191906000526020600020905b8154815290600101906020018083116105a657829003601f168201915b5050505050905092915050565b600080602083850312156105e357600080fd5b823567ffffffffffffffff808211156105fb57600080fd5b818501915085601f83011261060f57600080fd5b81358181111561061e57600080fd5b86602082850101111561063057600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561067b5761067b610642565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156106aa576106aa610642565b604052919050565b600067ffffffffffffffff8211156106cc576106cc610642565b50601f01601f191660200190565b6000602082840312156106ec57600080fd5b813567ffffffffffffffff81111561070357600080fd5b8201601f8101841361071457600080fd5b8035610727610722826106b2565b610681565b81815285602083850101111561073c57600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b8381101561077557818101518382015260200161075d565b50506000910152565b6000815180845261079681602086016020860161075a565b601f01601f19169290920160200192915050565b8281526040602082015260006107c3604083018461077e565b949350505050565b600181811c908216806107df57607f821691505b6020821081036107ff57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561011f57600081815260208120601f850160051c8101602086101561082c5750805b601f850160051c820191505b818110156103c557828155600101610838565b67ffffffffffffffff83111561086357610863610642565b6108778361087183546107cb565b83610805565b6000601f8411600181146108ab57600085156108935750838201355b600019600387901b1c1916600186901b178355610905565b600083815260209020601f19861690835b828110156108dc57868501358255602094850194600190920191016108bc565b50868210156108f95760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b6001600160a01b038116811461092157600080fd5b50565b60008060006060848603121561093957600080fd5b83516109448161090c565b60208501519093506109558161090c565b80925050604084015190509250925092565b60006020828403121561097957600080fd5b8151801515811461098957600080fd5b9392505050565b60008082840360808112156109a457600080fd5b60608112156109b257600080fd5b506109bb610658565b83516109c68161090c565b81526020848101519082015260408085015190820152606084015190925067ffffffffffffffff8111156109f957600080fd5b8301601f81018513610a0a57600080fd5b8051610a18610722826106b2565b818152866020838501011115610a2d57600080fd5b610a3e82602083016020860161075a565b8093505050509250929050565b60018060a01b03835116815260208301516020820152604083015160408201526080606082015260006107c3608083018461077e565b600060208284031215610a9357600080fd5b81516109898161090c565b6001600160a01b0384168152606060208201819052600090610ac29083018561077e565b82810360408401526104f3818561077e56fea2646970667358221220554d04dc112b14cbd7acfdb8b384973f1bf0591bbc978ab43e98d32e5e3850ce64736f6c63430008120033";

type BuyNowPayLaterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BuyNowPayLaterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BuyNowPayLater__factory extends ContractFactory {
  constructor(...args: BuyNowPayLaterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _kairos: PromiseOrValue<string>,
    _flashLender: PromiseOrValue<string>,
    _market: PromiseOrValue<string>,
    _nft: PromiseOrValue<string>,
    _wEth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BuyNowPayLater> {
    return super.deploy(
      _kairos,
      _flashLender,
      _market,
      _nft,
      _wEth,
      overrides || {}
    ) as Promise<BuyNowPayLater>;
  }
  override getDeployTransaction(
    _kairos: PromiseOrValue<string>,
    _flashLender: PromiseOrValue<string>,
    _market: PromiseOrValue<string>,
    _nft: PromiseOrValue<string>,
    _wEth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _kairos,
      _flashLender,
      _market,
      _nft,
      _wEth,
      overrides || {}
    );
  }
  override attach(address: string): BuyNowPayLater {
    return super.attach(address) as BuyNowPayLater;
  }
  override connect(signer: Signer): BuyNowPayLater__factory {
    return super.connect(signer) as BuyNowPayLater__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BuyNowPayLaterInterface {
    return new utils.Interface(_abi) as BuyNowPayLaterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BuyNowPayLater {
    return new Contract(address, _abi, signerOrProvider) as BuyNowPayLater;
  }
}
