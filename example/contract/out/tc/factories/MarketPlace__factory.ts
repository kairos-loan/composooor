/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MarketPlace, MarketPlaceInterface } from "../MarketPlace";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_wEth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC721",
            name: "implem",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct SaleOffer",
        name: "offer",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "buy",
    outputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516106e23803806106e283398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161065761008b600039600061012a01526106576000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063bacc3c9014610030575b600080fd5b61004361003e3660046104ff565b61005f565b6040516001600160a01b03909116815260200160405180910390f35b6040805183516001600160a01b0316602080830191909152808501518284015284830151606080840191909152835180840390910181526080830184528051908201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000060a084015260bc8084018290528451808503909101815260dc9093019093528151910120600091906100f58185610210565b60408681015190516323b872dd60e01b81523360048201526001600160a01b03808416602483015260448201929092529194507f000000000000000000000000000000000000000000000000000000000000000016906323b872dd906064016020604051808303816000875af1158015610173573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019791906105e2565b50845160208601516040516323b872dd60e01b81526001600160a01b03868116600483015233602483015260448201929092529116906323b872dd90606401600060405180830381600087803b1580156101f057600080fd5b505af1158015610204573d6000803e3d6000fd5b50505050505092915050565b600080600061021f8585610234565b9150915061022c81610279565b509392505050565b600080825160410361026a5760208301516040840151606085015160001a61025e878285856103cb565b94509450505050610272565b506000905060025b9250929050565b600081600481111561028d5761028d61060b565b036102955750565b60018160048111156102a9576102a961060b565b036102fb5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064015b60405180910390fd5b600281600481111561030f5761030f61060b565b0361035c5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016102f2565b60038160048111156103705761037061060b565b036103c85760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016102f2565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156104025750600090506003610486565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610456573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661047f57600060019250925050610486565b9150600090505b94509492505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156104c8576104c861048f565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156104f7576104f761048f565b604052919050565b600080828403608081121561051357600080fd5b606081121561052157600080fd5b5061052a6104a5565b83356001600160a01b038116811461054157600080fd5b8152602084810135818301526040808601359083015290925060608401359067ffffffffffffffff8083111561057657600080fd5b828601925086601f84011261058a57600080fd5b82358181111561059c5761059c61048f565b6105ae601f8201601f191684016104ce565b915080825287838286010111156105c457600080fd5b80838501848401376000838284010152508093505050509250929050565b6000602082840312156105f457600080fd5b8151801515811461060457600080fd5b9392505050565b634e487b7160e01b600052602160045260246000fdfea26469706673582212209e1d3e7eff8643aac7828e2103437a01e14cdaa80d2708ac9870e368b59d89f564736f6c63430008120033";

type MarketPlaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketPlaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MarketPlace__factory extends ContractFactory {
  constructor(...args: MarketPlaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _wEth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MarketPlace> {
    return super.deploy(_wEth, overrides || {}) as Promise<MarketPlace>;
  }
  override getDeployTransaction(
    _wEth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_wEth, overrides || {});
  }
  override attach(address: string): MarketPlace {
    return super.attach(address) as MarketPlace;
  }
  override connect(signer: Signer): MarketPlace__factory {
    return super.connect(signer) as MarketPlace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketPlaceInterface {
    return new utils.Interface(_abi) as MarketPlaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MarketPlace {
    return new Contract(address, _abi, signerOrProvider) as MarketPlace;
  }
}
