/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  BuyNowPayLater,
  BuyNowPayLaterInterface,
} from "../../contracts/BuyNowPayLater";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract FakeKairos",
        name: "_kairos",
        type: "address",
      },
      {
        internalType: "contract FlashLender",
        name: "_flashLender",
        type: "address",
      },
      {
        internalType: "contract MarketPlace",
        name: "_market",
        type: "address",
      },
      {
        internalType: "contract IERC721",
        name: "_nft",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registryAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "abiArgs",
        type: "bytes",
      },
    ],
    name: "MissingOffchainDataError",
    type: "error",
  },
  {
    inputs: [],
    name: "buyNowPayLater",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "callbackData",
        type: "bytes",
      },
    ],
    name: "flashCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "recordParameter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620016443803806200164483398181016040528101906200003791906200025a565b83600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905050505050620002cc565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200013f8262000112565b9050919050565b6000620001538262000132565b9050919050565b620001658162000146565b81146200017157600080fd5b50565b60008151905062000185816200015a565b92915050565b6000620001988262000132565b9050919050565b620001aa816200018b565b8114620001b657600080fd5b50565b600081519050620001ca816200019f565b92915050565b6000620001dd8262000132565b9050919050565b620001ef81620001d0565b8114620001fb57600080fd5b50565b6000815190506200020f81620001e4565b92915050565b6000620002228262000132565b9050919050565b620002348162000215565b81146200024057600080fd5b50565b600081519050620002548162000229565b92915050565b600080600080608085870312156200027757620002766200010d565b5b6000620002878782880162000174565b94505060206200029a87828801620001b9565b9350506040620002ad87828801620001fe565b9250506060620002c08782880162000243565b91505092959194509250565b61136880620002dc6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631e56d58314610046578063c1012f8114610050578063e37392381461006c575b600080fd5b61004e610088565b005b61006a600480360381019061006591906106b3565b610165565b005b61008660048036038101906100819190610841565b610212565b005b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663167ec36d670de0b6b3a7640000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001604051602001610105929190610951565b6040516020818303038152906040526040518363ffffffff1660e01b8152600401610131929190610a3e565b600060405180830381600087803b15801561014b57600080fd5b505af115801561015f573d6000803e3d6000fd5b50505050565b81816000803273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018060003273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546101f29190610a9d565b8152602001908152602001600020918261020d929190610cde565b505050565b600080828060200190518101906102299190610e2a565b915091506102378282610372565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c1bce0b783836709b6e64a8ec600006040518463ffffffff1660e01b815260040161029e93929190610eb4565b600060405180830381600087803b1580156102b857600080fd5b505af11580156102cc573d6000803e3d6000fd5b5050505073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330670429d069189e00006040518463ffffffff1660e01b815260040161032993929190610f35565b6020604051808303816000875af1158015610348573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036c9190610fa4565b50505050565b60006103b760405180606001604052806025815260200161130e6025913984846040516020016103a3929190610fd1565b60405160208183030381529060405261046f565b9050600080828060200190518101906103d091906110d3565b915091506040516020016103e39061118c565b6040516020818303038152906040528051906020012060601c73ffffffffffffffffffffffffffffffffffffffff1663bacc3c9083836040518363ffffffff1660e01b815260040161043692919061120c565b600060405180830381600087803b15801561045057600080fd5b505af1158015610464573d6000803e3d6000fd5b505050505050505050565b60606000803273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018060003273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104fc9190610a9d565b8152602001908152602001600020805461051590610b0b565b80601f016020809104026020016040519081016040528092919081815260200182805461054190610b0b565b801561058e5780601f106105635761010080835404028352916020019161058e565b820191906000526020600020905b81548152906001019060200180831161057157829003601f168201915b5050505050905060008151036105df573083836040517fab3e92cf0000000000000000000000000000000000000000000000000000000081526004016105d693929190611280565b60405180910390fd5b600160003273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061062f906112c5565b919050555092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126106735761067261064e565b5b8235905067ffffffffffffffff8111156106905761068f610653565b5b6020830191508360018202830111156106ac576106ab610658565b5b9250929050565b600080602083850312156106ca576106c9610644565b5b600083013567ffffffffffffffff8111156106e8576106e7610649565b5b6106f48582860161065d565b92509250509250929050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61074e82610705565b810181811067ffffffffffffffff8211171561076d5761076c610716565b5b80604052505050565b600061078061063a565b905061078c8282610745565b919050565b600067ffffffffffffffff8211156107ac576107ab610716565b5b6107b582610705565b9050602081019050919050565b82818337600083830152505050565b60006107e46107df84610791565b610776565b905082815260208101848484011115610800576107ff610700565b5b61080b8482856107c2565b509392505050565b600082601f8301126108285761082761064e565b5b81356108388482602086016107d1565b91505092915050565b60006020828403121561085757610856610644565b5b600082013567ffffffffffffffff81111561087557610874610649565b5b61088184828501610813565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108cf6108ca6108c58461088a565b6108aa565b61088a565b9050919050565b60006108e1826108b4565b9050919050565b60006108f3826108d6565b9050919050565b610903816108e8565b82525050565b6000819050919050565b600060ff82169050919050565b600061093b61093661093184610909565b6108aa565b610913565b9050919050565b61094b81610920565b82525050565b600060408201905061096660008301856108fa565b6109736020830184610942565b9392505050565b6000819050919050565b6000819050919050565b60006109a96109a461099f8461097a565b6108aa565b610984565b9050919050565b6109b98161098e565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156109f95780820151818401526020810190506109de565b60008484015250505050565b6000610a10826109bf565b610a1a81856109ca565b9350610a2a8185602086016109db565b610a3381610705565b840191505092915050565b6000604082019050610a5360008301856109b0565b8181036020830152610a658184610a05565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610aa882610984565b9150610ab383610984565b9250828201905080821115610acb57610aca610a6e565b5b92915050565b600082905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610b2357607f821691505b602082108103610b3657610b35610adc565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610b9e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610b61565b610ba88683610b61565b95508019841693508086168417925050509392505050565b6000610bdb610bd6610bd184610984565b6108aa565b610984565b9050919050565b6000819050919050565b610bf583610bc0565b610c09610c0182610be2565b848454610b6e565b825550505050565b600090565b610c1e610c11565b610c29818484610bec565b505050565b5b81811015610c4d57610c42600082610c16565b600181019050610c2f565b5050565b601f821115610c9257610c6381610b3c565b610c6c84610b51565b81016020851015610c7b578190505b610c8f610c8785610b51565b830182610c2e565b50505b505050565b600082821c905092915050565b6000610cb560001984600802610c97565b1980831691505092915050565b6000610cce8383610ca4565b9150826002028217905092915050565b610ce88383610ad1565b67ffffffffffffffff811115610d0157610d00610716565b5b610d0b8254610b0b565b610d16828285610c51565b6000601f831160018114610d455760008415610d33578287013590505b610d3d8582610cc2565b865550610da5565b601f198416610d5386610b3c565b60005b82811015610d7b57848901358255600182019150602085019450602081019050610d56565b86831015610d985784890135610d94601f891682610ca4565b8355505b6001600288020188555050505b50505050505050565b6000610db98261088a565b9050919050565b6000610dcb82610dae565b9050919050565b610ddb81610dc0565b8114610de657600080fd5b50565b600081519050610df881610dd2565b92915050565b610e0781610984565b8114610e1257600080fd5b50565b600081519050610e2481610dfe565b92915050565b60008060408385031215610e4157610e40610644565b5b6000610e4f85828601610de9565b9250506020610e6085828601610e15565b9150509250929050565b610e7381610984565b82525050565b6000819050919050565b6000610e9e610e99610e9484610e79565b6108aa565b610984565b9050919050565b610eae81610e83565b82525050565b6000606082019050610ec960008301866108fa565b610ed66020830185610e6a565b610ee36040830184610ea5565b949350505050565b610ef481610dae565b82525050565b6000819050919050565b6000610f1f610f1a610f1584610efa565b6108aa565b610984565b9050919050565b610f2f81610f04565b82525050565b6000606082019050610f4a6000830186610eeb565b610f576020830185610eeb565b610f646040830184610f26565b949350505050565b60008115159050919050565b610f8181610f6c565b8114610f8c57600080fd5b50565b600081519050610f9e81610f78565b92915050565b600060208284031215610fba57610fb9610644565b5b6000610fc884828501610f8f565b91505092915050565b6000604082019050610fe660008301856108fa565b610ff36020830184610e6a565b9392505050565b600080fd5b60006060828403121561101557611014610ffa565b5b61101f6060610776565b9050600061102f84828501610de9565b600083015250602061104384828501610e15565b602083015250604061105784828501610e15565b60408301525092915050565b600061107661107184610791565b610776565b90508281526020810184848401111561109257611091610700565b5b61109d8482856109db565b509392505050565b600082601f8301126110ba576110b961064e565b5b81516110ca848260208601611063565b91505092915050565b600080608083850312156110ea576110e9610644565b5b60006110f885828601610fff565b925050606083015167ffffffffffffffff81111561111957611118610649565b5b611125858286016110a5565b9150509250929050565b600082825260208201905092915050565b7f6d61726b6574706c616365000000000000000000000000000000000000000000600082015250565b6000611176600b8361112f565b915061118182611140565b602082019050919050565b600060208201905081810360008301526111a581611169565b9050919050565b6111b5816108e8565b82525050565b6111c481610984565b82525050565b6060820160008201516111e060008501826111ac565b5060208201516111f360208501826111bb565b50604082015161120660408501826111bb565b50505050565b600060808201905061122160008301856111ca565b81810360608301526112338184610a05565b90509392505050565b600081519050919050565b60006112528261123c565b61125c818561112f565b935061126c8185602086016109db565b61127581610705565b840191505092915050565b60006060820190506112956000830186610eeb565b81810360208301526112a78185611247565b905081810360408301526112bb8184610a05565b9050949350505050565b60006112d082610984565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361130257611301610a6e565b5b60018201905091905056fe687474703a2f2f6d61726b6574706c6163652e6170692e636f6d706f736f6f6f722e636f6da2646970667358221220ef90c60809ff642664cf250ba7cc78e6678891d87f3e20304176f0a2247084fa64736f6c63430008120033";

type BuyNowPayLaterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BuyNowPayLaterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BuyNowPayLater__factory extends ContractFactory {
  constructor(...args: BuyNowPayLaterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _kairos: PromiseOrValue<string>,
    _flashLender: PromiseOrValue<string>,
    _market: PromiseOrValue<string>,
    _nft: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BuyNowPayLater> {
    return super.deploy(
      _kairos,
      _flashLender,
      _market,
      _nft,
      overrides || {}
    ) as Promise<BuyNowPayLater>;
  }
  override getDeployTransaction(
    _kairos: PromiseOrValue<string>,
    _flashLender: PromiseOrValue<string>,
    _market: PromiseOrValue<string>,
    _nft: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _kairos,
      _flashLender,
      _market,
      _nft,
      overrides || {}
    );
  }
  override attach(address: string): BuyNowPayLater {
    return super.attach(address) as BuyNowPayLater;
  }
  override connect(signer: Signer): BuyNowPayLater__factory {
    return super.connect(signer) as BuyNowPayLater__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BuyNowPayLaterInterface {
    return new utils.Interface(_abi) as BuyNowPayLaterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BuyNowPayLater {
    return new Contract(address, _abi, signerOrProvider) as BuyNowPayLater;
  }
}
